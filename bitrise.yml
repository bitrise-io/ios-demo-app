format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
trigger_map:
- push_branch: '*'
  workflow: primary
- pull_request_source_branch: '*'
  workflow: primary
app:
  envs:
  - BITRISE_PROJECT_PATH: iOS Demo.xcodeproj
  - BITRISE_SCHEME: iOS Demo
  - BITRISE_DISTRIBUTION_METHOD: development
workflows:
  _setup:
    description: |-
      This is a utility workflow for common tasks used by other workflows
    steps:
    - git-clone@8: {}
    - cache-pull@2: {}
    - recreate-user-schemes@1:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
  _test:
    description: |-
      This workflow executes the tests. The *retry_on_failure* test repetition mode is enabled.

      Next steps:
      - Check out [Getting started with iOS apps](https://devcenter.bitrise.io/en/getting-started/getting-started-with-ios-apps.html).
    before_run:
      - _setup
    steps:
    - xcode-test@4:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
        - scheme: $BITRISE_SCHEME
        - test_repetition_mode: retry_on_failure
  primary:
    before_run:
    - _test
    steps:
    - deploy-to-bitrise-io@2: {}
  deploy-demo:
    description: |-
      This workflow tests, builds and deploys the debug version of the app for iOS simulator as well as the generated test report using *Deploy to bitrise.io* Step.

      For testing the *retry_on_failure* test repetition mode is enabled.
    before_run:
    - _test
    steps:
    - xcode-build-for-simulator@0:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
        - scheme: $BITRISE_SCHEME
        - configuration: Debug
    - cache-push@2: {}
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x
            # zip the app package
            cd $BITRISE_DEPLOY_DIR
            zip -r iOS\ Demo.app.zip iOS\ Demo.app
    - deploy-to-bitrise-io@2: {}
  deploy:
    description: |-
      This workflow tests, builds, and deploys the release version of the app.

      In order for this workflow to run successfully you will need to complete setting up code-signing.

      Next steps:
      - Set up [Connecting to an Apple service with API key](https://devcenter.bitrise.io/en/accounts/connecting-to-services/connecting-to-an-apple-service-with-api-key.html##).
      - Or further customise code signing following our [iOS code signing](https://devcenter.bitrise.io/en/code-signing/ios-code-signing.html) guide.
    before_run:
    - _test
    steps:
    - xcode-archive@4:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
        - scheme: $BITRISE_SCHEME
        - distribution_method: $BITRISE_DISTRIBUTION_METHOD
        - automatic_code_signing: api-key
    - cache-push@2: {}
    - deploy-to-bitrise-io@2: {}
